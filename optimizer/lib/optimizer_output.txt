hustle> SELECT a FROM t;

TopLevelPlan
+-plan=Selection[has_repartition=false]
| +-input=TableReference[relation=T,alias=t]
| | +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| +-project_expressions=
|   +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
+-output_attributes=
  +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]


hustle> SELECT a,b FROM t;

TopLevelPlan
+-plan=Selection[has_repartition=false]
| +-input=TableReference[relation=T,alias=t]
| | +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| +-project_expressions=
|   +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
|   +-AttributeReference[id=1,name=b,relation=t,type=Int]
+-output_attributes=
  +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
  +-AttributeReference[id=1,name=b,relation=t,type=Int]

hustle> SELECT SUM(a) FROM t;

TopLevelPlan
+-plan=Selection[has_repartition=false]
| +-input=Aggregate[has_repartition=false]
| | +-input=TableReference[relation=T,alias=t]
| | | +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| | | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| | +-grouping_expressions=
| | | +-[]
| | +-aggregate_expressions=
| |   +-Alias[id=2,name=,alias=$aggregate0,relation=$aggregate,type=Long NULL]
| |     +-AggregateFunction[function=SUM]
| |       +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| +-project_expressions=
|   +-Alias[id=2,name=,alias=SUM(a),relation=,type=Long NULL]
|     +-AttributeReference[id=2,name=,alias=$aggregate0,relation=$aggregate,
|       type=Long NULL]
+-output_attributes=
  +-AttributeReference[id=2,name=,alias=SUM(a),relation=,type=Long NULL]

 hustle> SELECT CommonPrefix(a) FROM t;

TopLevelPlan
+-plan=Selection[has_repartition=false]
| +-input=Aggregate[has_repartition=false]
| | +-input=TableReference[relation=T,alias=t]
| | | +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| | | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| | +-grouping_expressions=
| | | +-[]
| | +-aggregate_expressions=
| |   +-Alias[id=2,name=,alias=$aggregate0,relation=$aggregate,type=Long NULL]
| |     +-AggregateFunction[function=CommonPrefix]
| |       +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| +-project_expressions=
|   +-Alias[id=2,name=,alias=SUM(a),relation=,type=Long NULL]
|     +-AttributeReference[id=2,name=,alias=$aggregate0,relation=$aggregate,
|       type=Long NULL]
+-output_attributes=
  +-AttributeReference[id=2,name=,alias=SUM(a),relation=,type=Long NULL]

hustle> SELECT COUNT(a) FROM t;

TopLevelPlan
+-plan=Selection[has_repartition=false]
| +-input=Aggregate[has_repartition=false]
| | +-input=TableReference[relation=T,alias=t]
| | | +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| | | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| | +-grouping_expressions=
| | | +-[]
| | +-aggregate_expressions=
| |   +-Alias[id=2,name=,alias=$aggregate0,relation=$aggregate,type=Long]
| |     +-AggregateFunction[function=COUNT]
| |       +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| +-project_expressions=
|   +-Alias[id=2,name=,alias=COUNT(a),relation=,type=Long]
|     +-AttributeReference[id=2,name=,alias=$aggregate0,relation=$aggregate,
|       type=Long]
+-output_attributes=
+-AttributeReference[id=2,name=,alias=COUNT(a),relation=,type=Long]

hustle>  SELECT a.w, b.x FROM a, b where a.w = b.w;
TopLevelPlan
+-plan=HashJoin[has_repartition=false]
| +-left=TableReference[relation=a]
| | +-AttributeReference[id=0,name=w,relation=a,type=Int]
| | +-AttributeReference[id=1,name=x,relation=a,type=Int]
| | +-AttributeReference[id=2,name=y,relation=a,type=Int]
| | +-AttributeReference[id=3,name=z,relation=a,type=Int]
| +-right=TableReference[relation=b]
| | +-AttributeReference[id=4,name=w,relation=b,type=Int]
| | +-AttributeReference[id=5,name=x,relation=b,type=Int]
| +-project_expressions=
| | +-AttributeReference[id=0,name=w,relation=a,type=Int]
| | +-AttributeReference[id=5,name=x,relation=b,type=Int]
| +-left_join_attributes=
| | +-AttributeReference[id=0,name=w,relation=a,type=Int]
| +-right_join_attributes=
|   +-AttributeReference[id=4,name=w,relation=b,type=Int]
+-output_attributes=
  +-AttributeReference[id=0,name=w,relation=a,type=Int]
  +-AttributeReference[id=5,name=x,relation=b,type=Int]

hustle> CREATE TABLE foo (col1 int not null, col2 long, col3 double, col4 float, col5 char(5), col6 varchar(5), col7 int null, col8 long null, col9 double null,  col10 float null, col11 char(5) null, col12 varchar(5) null);
TopLevelPlan
+-plan=CreateTable[relation=foo]
| +-attributes=
|   +-AttributeReference[id=0,name=col1,relation=foo,type=Int]
|   +-AttributeReference[id=1,name=col2,relation=foo,type=Long]
|   +-AttributeReference[id=2,name=col3,relation=foo,type=Double]
|   +-AttributeReference[id=3,name=col4,relation=foo,type=Float]
|   +-AttributeReference[id=4,name=col5,relation=foo,type=Char(5)]
|   +-AttributeReference[id=5,name=col6,relation=foo,type=VarChar(5)]
|   +-AttributeReference[id=6,name=col7,relation=foo,type=Int NULL]
|   +-AttributeReference[id=7,name=col8,relation=foo,type=Long NULL]
|   +-AttributeReference[id=8,name=col9,relation=foo,type=Double NULL]
|   +-AttributeReference[id=9,name=col10,relation=foo,type=Float NULL]
|   +-AttributeReference[id=10,name=col11,relation=foo,type=Char(5) NULL]
|   +-AttributeReference[id=11,name=col12,relation=foo,type=VarChar(5) NULL]
+-output_attributes=
  +-AttributeReference[id=0,name=col1,relation=foo,type=Int]
  +-AttributeReference[id=1,name=col2,relation=foo,type=Long]
  +-AttributeReference[id=2,name=col3,relation=foo,type=Double]
  +-AttributeReference[id=3,name=col4,relation=foo,type=Float]
  +-AttributeReference[id=4,name=col5,relation=foo,type=Char(5)]
  +-AttributeReference[id=5,name=col6,relation=foo,type=VarChar(5)]
  +-AttributeReference[id=6,name=col7,relation=foo,type=Int NULL]
  +-AttributeReference[id=7,name=col8,relation=foo,type=Long NULL]
  +-AttributeReference[id=8,name=col9,relation=foo,type=Double NULL]
  +-AttributeReference[id=9,name=col10,relation=foo,type=Float NULL]
  +-AttributeReference[id=10,name=col11,relation=foo,type=Char(5) NULL]
  +-AttributeReference[id=11,name=col12,relation=foo,type=VarChar(5) NULL]

hustle> INSERT INTO t VALUES (1, 2);
TopLevelPlan
+-plan=InsertTuple
| +-input=TableReference[relation=T,alias=t]
| | +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| +-column_values=
|   +-Literal[value=1,type=Int NULL]
|   +-Literal[value=2,type=Int]
+-output_attributes=
  +-[]

hustle>  SELECT a FROM t WHERE b = 5;
TopLevelPlan
+-plan=Selection[has_repartition=false]
| +-input=TableReference[relation=T,alias=t]
| | +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| +-filter_predicate=Equal
| | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| | +-Literal[value=5,type=Int]
| +-project_expressions=
|   +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
+-output_attributes=
  +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]

hustle> SELECT a FROM t WHERE b > 5;
TopLevelPlan
+-plan=Selection[has_repartition=false]
| +-input=TableReference[relation=T,alias=t]
| | +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| +-filter_predicate=Greater
| | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| | +-Literal[value=5,type=Int]
| +-project_expressions=
|   +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
+-output_attributes=
  +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]

hustle>  SELECT a FROM t WHERE b > 5 and b < 7 and a = 2;
TopLevelPlan
+-plan=Selection[has_repartition=false]
| +-input=TableReference[relation=T,alias=t]
| | +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| +-filter_predicate=And
| | +-Greater
| | | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| | | +-Literal[value=5,type=Int]
| | +-Less
| | | +-AttributeReference[id=1,name=b,relation=t,type=Int]
| | | +-Literal[value=7,type=Int]
| | +-Equal
| |   +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
| |   +-Literal[value=2,type=Int]
| +-project_expressions=
|   +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]
+-output_attributes=
  +-AttributeReference[id=0,name=a,relation=t,type=Int NULL]


SELECT k FROM s WHERE k LIKE 'afd';
TopLevelPlan
+-plan=Selection[has_repartition=false]
| +-input=TableReference[relation=S,alias=s]
| | +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]
| | +-AttributeReference[id=1,name=x,relation=s,type=Int]
| +-filter_predicate=Like
| | +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]
| | +-Literal[value=afd,type=VarChar(3)]
| +-project_expressions=
|   +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]
+-output_attributes=
  +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]

SELECT k FROM s WHERE k LIKE 'afd' and x > 5;
TopLevelPlan
+-plan=Selection[has_repartition=false]
| +-input=TableReference[relation=S,alias=s]
| | +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]
| | +-AttributeReference[id=1,name=x,relation=s,type=Int]
| +-filter_predicate=And
| | +-Like
| | | +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]
| | | +-Literal[value=afd,type=VarChar(3)]
| | +-Greater
| |   +-AttributeReference[id=1,name=x,relation=s,type=Int]
| |   +-Literal[value=5,type=Int]
| +-project_expressions=
|   +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]
+-output_attributes=
  +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]
  
SELECT k FROM s WHERE (k LIKE 'afd' and x > 5) or x = 3 ;  
  TopLevelPlan
+-plan=Selection[has_repartition=false]
| +-input=TableReference[relation=S,alias=s]
| | +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]
| | +-AttributeReference[id=1,name=x,relation=s,type=Int]
| +-filter_predicate=Or
| | +-And
| | | +-Like
| | | | +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]
| | | | +-Literal[value=afd,type=VarChar(3)]
| | | +-Greater
| | |   +-AttributeReference[id=1,name=x,relation=s,type=Int]
| | |   +-Literal[value=5,type=Int]
| | +-Equal
| |   +-AttributeReference[id=1,name=x,relation=s,type=Int]
| |   +-Literal[value=3,type=Int]
| +-project_expressions=
|   +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]
+-output_attributes=
  +-AttributeReference[id=0,name=k,relation=s,type=VarChar(20)]
